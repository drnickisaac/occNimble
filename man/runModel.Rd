% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runModel.R
\name{runModel}
\alias{runModel}
\title{runModel}
\usage{
runModel(
  dataConstants,
  obsData,
  dataSumm,
  useNimble = TRUE,
  inclPhenology = TRUE,
  inclStateRE = FALSE,
  multiSp = FALSE,
  parallelize = FALSE,
  allPars = FALSE,
  n.iter = 1000,
  n.burn = NULL,
  n.thin = 5,
  n.chain = 3,
  maxSp = 9999
)
}
\arguments{
\item{dataConstants}{dataframe produced by formatData()}

\item{obsData}{dataframe produced by formatData()}

\item{useNimble}{option to bypass the model fitting in Nimble (just for testing the code)}

\item{inclPhenology}{should the model account for seasonal variation?}

\item{inclStateRE}{should there be a site-level random effect in the state model?}

\item{multiSp}{should the model be run as a multispecies model, or many single-species models?}

\item{parallelize}{should the chains be run as separate processes on different cores?}

\item{allPars}{if \code{TRUE} then all model parameters are monitored. If \code{FALSE}, just \code{lam.0bda} and \code{Trend}.}

\item{n.iter}{number of iterations for the Nimble model. Default is 1000.}

\item{n.burn}{number of iterations for the burn-in. If \code{NULL} (the default), then it will be set to \code{n.iter/2}.}

\item{n.thin}{thinning for the MCMC chains. Defaults to 5}

\item{n.chain}{number of MCMC chains. Defaults to 3}

\item{maxSp}{maximum number of species to be modelled}

\item{dataSumm$stats}{dataframe produced by formatData()}
}
\value{
a set of year effects
}
\description{
runModel
}
\details{
Runs an occupancy model for multiple species.
}
\examples{
\dontrun{

set.seed(123)

# Create data
n <- 15000 #size of dataset
nyear <- 20 # number of years in data
nSamples <- 100 # set number of dates
nSites <- 50 # set number of sites

# Create somes dates
first <- as.Date(strptime("2010/01/01", format="\%Y/\%m/\%d"))
last <- as.Date(strptime(paste(2010+(nyear-1),"/12/31", sep=''), format="\%Y/\%m/\%d"))
dt <- last-first
rDates <- first + (runif(nSamples)*dt)

# taxa are set as random letters
taxa <- sample(letters, size = n, TRUE)

# taxa are set as random letters: weight so that some species are more commonly observed
taxa <- sample(letters, size = n, TRUE, prob = seq(from = 0.01, to = 0.4, length.out = 26))

# sites are visited randomly
site <- sample(paste('site_', 1:nSites, sep=''), size = n, TRUE)

# Format the data
inData <- data.frame(species = taxa,
                     siteID = site,
                     survey = survey,
                     year = as.numeric(format(as.Date(survey, format="\%d/\%m/\%Y"),"\%Y")))

# prepare the data for the model (includes removing species found on few sites)
formattedData <- formatData(inData)

# Summarise the data
dataSumm <- with(formattedData, summariseData(obsData, dataConstants))

# run the model with these data for one species (very small number of iterations)
results <- runModel(formattedData$dataConstants,
                   formattedData$obsData,
                   dataSumm)
}
}
